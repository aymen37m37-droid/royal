// Employee Cashier Module - ูุงุดูุฑ ุงูููุธููู
async function loadEmployeeCashier() {
    const contentArea = document.getElementById('content-area');
    const meals = await db.getAll('employee_meals') || [];
    const orders = await db.getAll('employee_meal_orders') || [];
    
    const todayOrders = orders.filter(o => {
        const orderDate = new Date(o.created_at).toDateString();
        const today = new Date().toDateString();
        return orderDate === today;
    });
    
    const totalToday = todayOrders.reduce((sum, o) => sum + o.total, 0);
    
    contentArea.innerHTML = `
        <h2 class="mb-3">๐ฝ๏ธ ูุงุดูุฑ ุงูููุธููู</h2>

        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-label">ุทูุจุงุช ุงูููู</div>
                <div class="stat-value">${todayOrders.length}</div>
            </div>
            <div class="stat-card" style="border-color: var(--success);">
                <div class="stat-label">ุฅุฌูุงูู ุงูููู</div>
                <div class="stat-value" style="color: var(--success);">${formatCurrency(totalToday)}</div>
            </div>
            <div class="stat-card" style="border-color: var(--info);">
                <div class="stat-label">ุนุฏุฏ ุงููุฌุจุงุช</div>
                <div class="stat-value" style="color: var(--info);">${meals.length}</div>
            </div>
        </div>

        <div style="display: flex; gap: 1rem; margin-bottom: 1.5rem; flex-wrap: wrap;">
            <button class="btn btn-primary" onclick="showMealManagement()">๐ฝ๏ธ ุฅุฏุงุฑุฉ ุงููุฌุจุงุช</button>
            <button class="btn btn-success" onclick="showNewMealOrder()">โ ุทูุจ ุฌุฏูุฏ</button>
            <button class="btn btn-secondary" onclick="showMealOrdersHistory()">๐ ุณุฌู ุงูุทูุจุงุช</button>
        </div>

        <div id="employeeCashierContent"></div>
    `;

    showMealManagement();
}

async function showMealManagement() {
    const meals = await db.getAll('employee_meals');
    const content = document.getElementById('employeeCashierContent');
    
    content.innerHTML = `
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">ุฅุฏุงุฑุฉ ุงููุฌุจุงุช</h3>
                <button class="btn btn-primary" onclick="showAddMealForm()">โ ุฅุถุงูุฉ ูุฌุจุฉ</button>
            </div>

            <div class="table-container">
                <table>
                    <thead>
                        <tr>
                            <th>ููุฏ</th>
                            <th>ุงุณู ุงููุฌุจุฉ</th>
                            <th>ุงูุณุนุฑ</th>
                            <th>ุงููุฆุฉ</th>
                            <th>ุงููุตู</th>
                            <th>ูุชููุฑุฉ</th>
                            <th>ุงูุฅุฌุฑุงุกุงุช</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${meals.length === 0 ? '<tr><td colspan="7" class="text-center">ูุง ุชูุฌุฏ ูุฌุจุงุช</td></tr>' :
                          meals.map(meal => `
                            <tr>
                                <td>${meal.id}</td>
                                <td>${meal.name}</td>
                                <td>${formatCurrency(meal.price)}</td>
                                <td>${meal.category || '-'}</td>
                                <td>${meal.description || '-'}</td>
                                <td><span class="badge ${meal.available ? 'text-success' : 'text-error'}">${meal.available ? 'ูุชููุฑุฉ' : 'ุบูุฑ ูุชููุฑุฉ'}</span></td>
                                <td>
                                    <button class="btn-icon" onclick="editMeal(${meal.id})" title="ุชุนุฏูู">โ๏ธ</button>
                                    <button class="btn-icon" onclick="toggleMealAvailability(${meal.id}, ${!meal.available})" title="${meal.available ? 'ุฅููุงู' : 'ุชูุนูู'}">${meal.available ? '๐ด' : '๐ข'}</button>
                                    <button class="btn-icon" onclick="deleteMeal(${meal.id})" title="ุญุฐู">๐๏ธ</button>
                                </td>
                            </tr>
                        `).join('')}
                    </tbody>
                </table>
            </div>
        </div>
    `;
}

function showAddMealForm() {
    const formHTML = `
        <form id="mealForm" onsubmit="saveMeal(event)">
            <div class="form-row">
                <div class="form-group">
                    <label class="form-label">ุงุณู ุงููุฌุจุฉ *</label>
                    <input type="text" name="name" class="form-input" required>
                </div>
                <div class="form-group">
                    <label class="form-label">ุงูุณุนุฑ *</label>
                    <input type="number" name="price" class="form-input" step="0.01" min="0" required>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group">
                    <label class="form-label">ุงููุฆุฉ</label>
                    <select name="category" class="form-select">
                        <option value="">ุงุฎุชุฑ ุงููุฆุฉ</option>
                        <option value="ุฅูุทุงุฑ">ุฅูุทุงุฑ</option>
                        <option value="ุบุฏุงุก">ุบุฏุงุก</option>
                        <option value="ุนุดุงุก">ุนุดุงุก</option>
                        <option value="ูุฌุจุงุช ุฎูููุฉ">ูุฌุจุงุช ุฎูููุฉ</option>
                        <option value="ูุดุฑูุจุงุช">ูุดุฑูุจุงุช</option>
                        <option value="ุญูููุงุช">ุญูููุงุช</option>
                    </select>
                </div>
                <div class="form-group">
                    <label class="form-label">ูุชููุฑุฉ</label>
                    <select name="available" class="form-select">
                        <option value="true">ูุนู</option>
                        <option value="false">ูุง</option>
                    </select>
                </div>
            </div>
            <div class="form-group">
                <label class="form-label">ุงููุตู</label>
                <textarea name="description" class="form-input" rows="3"></textarea>
            </div>
        </form>
    `;

    showModal('ุฅุถุงูุฉ ูุฌุจุฉ ุฌุฏูุฏุฉ', formHTML, [
        { text: 'ุญูุธ', class: 'btn-primary', onclick: 'document.getElementById("mealForm").requestSubmit()' },
        { text: 'ุฅูุบุงุก', class: 'btn-secondary', onclick: 'closeModal()' }
    ]);
}

async function saveMeal(event) {
    event.preventDefault();
    const formData = new FormData(event.target);
    
    const meal = {
        name: formData.get('name'),
        price: parseFloat(formData.get('price')),
        category: formData.get('category'),
        description: formData.get('description'),
        available: formData.get('available') === 'true'
    };

    await db.add('employee_meals', meal);
    showToast('ุชู ุฅุถุงูุฉ ุงููุฌุจุฉ ุจูุฌุงุญ', 'success');
    closeModal();
    showMealManagement();
}

async function editMeal(id) {
    const meal = await db.getById('employee_meals', id);
    
    const formHTML = `
        <form id="editMealForm" onsubmit="updateMeal(event, ${id})">
            <div class="form-row">
                <div class="form-group">
                    <label class="form-label">ุงุณู ุงููุฌุจุฉ *</label>
                    <input type="text" name="name" class="form-input" value="${meal.name}" required>
                </div>
                <div class="form-group">
                    <label class="form-label">ุงูุณุนุฑ *</label>
                    <input type="number" name="price" class="form-input" value="${meal.price}" step="0.01" min="0" required>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group">
                    <label class="form-label">ุงููุฆุฉ</label>
                    <select name="category" class="form-select">
                        <option value="">ุงุฎุชุฑ ุงููุฆุฉ</option>
                        <option value="ุฅูุทุงุฑ" ${meal.category === 'ุฅูุทุงุฑ' ? 'selected' : ''}>ุฅูุทุงุฑ</option>
                        <option value="ุบุฏุงุก" ${meal.category === 'ุบุฏุงุก' ? 'selected' : ''}>ุบุฏุงุก</option>
                        <option value="ุนุดุงุก" ${meal.category === 'ุนุดุงุก' ? 'selected' : ''}>ุนุดุงุก</option>
                        <option value="ูุฌุจุงุช ุฎูููุฉ" ${meal.category === 'ูุฌุจุงุช ุฎูููุฉ' ? 'selected' : ''}>ูุฌุจุงุช ุฎูููุฉ</option>
                        <option value="ูุดุฑูุจุงุช" ${meal.category === 'ูุดุฑูุจุงุช' ? 'selected' : ''}>ูุดุฑูุจุงุช</option>
                        <option value="ุญูููุงุช" ${meal.category === 'ุญูููุงุช' ? 'selected' : ''}>ุญูููุงุช</option>
                    </select>
                </div>
                <div class="form-group">
                    <label class="form-label">ูุชููุฑุฉ</label>
                    <select name="available" class="form-select">
                        <option value="true" ${meal.available ? 'selected' : ''}>ูุนู</option>
                        <option value="false" ${!meal.available ? 'selected' : ''}>ูุง</option>
                    </select>
                </div>
            </div>
            <div class="form-group">
                <label class="form-label">ุงููุตู</label>
                <textarea name="description" class="form-input" rows="3">${meal.description || ''}</textarea>
            </div>
        </form>
    `;

    showModal('ุชุนุฏูู ุงููุฌุจุฉ', formHTML, [
        { text: 'ุญูุธ', class: 'btn-primary', onclick: 'document.getElementById("editMealForm").requestSubmit()' },
        { text: 'ุฅูุบุงุก', class: 'btn-secondary', onclick: 'closeModal()' }
    ]);
}

async function updateMeal(event, id) {
    event.preventDefault();
    const formData = new FormData(event.target);
    
    const meal = await db.getById('employee_meals', id);
    meal.name = formData.get('name');
    meal.price = parseFloat(formData.get('price'));
    meal.category = formData.get('category');
    meal.description = formData.get('description');
    meal.available = formData.get('available') === 'true';

    await db.update('employee_meals', meal);
    showToast('ุชู ุชุญุฏูุซ ุงููุฌุจุฉ ุจูุฌุงุญ', 'success');
    closeModal();
    showMealManagement();
}

async function toggleMealAvailability(id, available) {
    const meal = await db.getById('employee_meals', id);
    meal.available = available;
    await db.update('employee_meals', meal);
    showToast(available ? 'ุชู ุชูุนูู ุงููุฌุจุฉ' : 'ุชู ุฅููุงู ุงููุฌุจุฉ', 'success');
    showMealManagement();
}

async function deleteMeal(id) {
    if (await confirm('ูู ุฃูุช ูุชุฃูุฏ ูู ุญุฐู ูุฐู ุงููุฌุจุฉุ')) {
        await db.delete('employee_meals', id);
        showToast('ุชู ุญุฐู ุงููุฌุจุฉ ุจูุฌุงุญ', 'success');
        showMealManagement();
    }
}

async function showNewMealOrder() {
    const employees = await db.getAll('employees').then(e => e.filter(emp => emp.status === 'active'));
    const meals = await db.getAll('employee_meals').then(m => m.filter(meal => meal.available));
    const content = document.getElementById('employeeCashierContent');
    
    content.innerHTML = `
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">ุทูุจ ูุฌุจุฉ ุฌุฏูุฏ</h3>
            </div>

            <div class="form-row mb-2">
                <div class="form-group">
                    <label class="form-label">ุงูููุธู *</label>
                    <select id="employeeSelect" class="form-select" required>
                        <option value="">ุงุฎุชุฑ ุงูููุธู</option>
                        ${employees.map(emp => `
                            <option value="${emp.id}" data-name="${emp.name}">${emp.name} - ${emp.position}</option>
                        `).join('')}
                    </select>
                </div>
            </div>

            <div id="mealOrderItems" class="mb-2">
                <h4>ุงููุฌุจุงุช ุงููุทููุจุฉ:</h4>
                <div id="selectedMeals" style="min-height: 100px; border: 1px solid var(--border); border-radius: 8px; padding: 1rem;">
                    <p style="color: var(--text-secondary); text-align: center;">ูู ูุชู ุงุฎุชูุงุฑ ูุฌุจุงุช ุจุนุฏ</p>
                </div>
                <div style="margin-top: 1rem; padding: 1rem; background: var(--bg-secondary); border-radius: 8px;">
                    <h4>ุงูุฅุฌูุงูู: <span id="mealOrderTotal">0.00 ุฑ.ุณ</span></h4>
                </div>
            </div>

            <div class="table-container" style="max-height: 400px; overflow-y: auto;">
                <table>
                    <thead>
                        <tr>
                            <th>ุงููุฌุจุฉ</th>
                            <th>ุงููุฆุฉ</th>
                            <th>ุงูุณุนุฑ</th>
                            <th>ุฅุถุงูุฉ</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${meals.length === 0 ? '<tr><td colspan="4" class="text-center">ูุง ุชูุฌุฏ ูุฌุจุงุช ูุชููุฑุฉ</td></tr>' :
                          meals.map(meal => `
                            <tr>
                                <td>${meal.name}</td>
                                <td>${meal.category || '-'}</td>
                                <td>${formatCurrency(meal.price)}</td>
                                <td>
                                    <button class="btn btn-sm btn-primary" onclick="addMealToOrder(${meal.id}, '${meal.name}', ${meal.price})">โ</button>
                                </td>
                            </tr>
                        `).join('')}
                    </tbody>
                </table>
            </div>

            <div style="margin-top: 1.5rem; display: flex; gap: 1rem; justify-content: flex-end;">
                <button class="btn btn-primary" onclick="submitMealOrder()">โ ุชุฃููุฏ ุงูุทูุจ ูุฅุถุงูุชู ูุญุณุงุจ ุงูููุธู</button>
                <button class="btn btn-secondary" onclick="clearMealOrder()">๐๏ธ ูุณุญ ุงูุทูุจ</button>
            </div>
        </div>
    `;
    
    window.mealOrder = { items: [], total: 0 };
}

function addMealToOrder(id, name, price) {
    const quantity = prompt(`ุงููููุฉ ูู ${name}`, '1');
    
    if (!quantity || isNaN(quantity) || parseInt(quantity) <= 0) {
        return;
    }
    
    const qty = parseInt(quantity);
    
    window.mealOrder.items.push({
        id: id,
        name: name,
        price: price,
        quantity: qty,
        total: price * qty
    });
    
    window.mealOrder.total += price * qty;
    
    updateSelectedMeals();
}

function updateSelectedMeals() {
    const container = document.getElementById('selectedMeals');
    const totalElement = document.getElementById('mealOrderTotal');
    
    if (window.mealOrder.items.length === 0) {
        container.innerHTML = '<p style="color: var(--text-secondary); text-align: center;">ูู ูุชู ุงุฎุชูุงุฑ ูุฌุจุงุช ุจุนุฏ</p>';
        totalElement.textContent = formatCurrency(0);
        return;
    }
    
    container.innerHTML = `
        <table style="width: 100%;">
            <thead>
                <tr>
                    <th>ุงููุฌุจุฉ</th>
                    <th>ุงููููุฉ</th>
                    <th>ุงูุณุนุฑ</th>
                    <th>ุงููุฌููุน</th>
                    <th>ุฅุฌุฑุงุก</th>
                </tr>
            </thead>
            <tbody>
                ${window.mealOrder.items.map((item, index) => `
                    <tr>
                        <td>${item.name}</td>
                        <td>${item.quantity}</td>
                        <td>${formatCurrency(item.price)}</td>
                        <td>${formatCurrency(item.total)}</td>
                        <td>
                            <button class="btn-icon" onclick="removeMealFromOrder(${index})" title="ุญุฐู">๐๏ธ</button>
                        </td>
                    </tr>
                `).join('')}
            </tbody>
        </table>
    `;
    
    totalElement.textContent = formatCurrency(window.mealOrder.total);
}

function removeMealFromOrder(index) {
    const item = window.mealOrder.items[index];
    window.mealOrder.total -= item.total;
    window.mealOrder.items.splice(index, 1);
    updateSelectedMeals();
}

function clearMealOrder() {
    if (confirm('ูู ุชุฑูุฏ ูุณุญ ุงูุทูุจุ')) {
        window.mealOrder = { items: [], total: 0 };
        updateSelectedMeals();
    }
}

async function submitMealOrder() {
    const employeeSelect = document.getElementById('employeeSelect');
    const employeeId = employeeSelect.value;
    const employeeName = employeeSelect.options[employeeSelect.selectedIndex]?.dataset?.name;
    
    if (!employeeId) {
        showToast('ุงูุฑุฌุงุก ุงุฎุชูุงุฑ ุงูููุธู', 'error');
        return;
    }
    
    if (window.mealOrder.items.length === 0) {
        showToast('ุงูุฑุฌุงุก ุงุฎุชูุงุฑ ูุฌุจุงุช ููุทูุจ', 'error');
        return;
    }
    
    const order = {
        employee_id: parseInt(employeeId),
        employee_name: employeeName,
        items: window.mealOrder.items,
        total: window.mealOrder.total,
        created_at: new Date().toISOString(),
        paid: false
    };
    
    const orderId = await db.add('employee_meal_orders', order);
    
    const employee = await db.getById('employees', parseInt(employeeId));
    if (!employee.meal_balance) {
        employee.meal_balance = 0;
    }
    employee.meal_balance -= window.mealOrder.total;
    await db.update('employees', employee);
    
    printMealOrder(orderId, order);
    
    showToast(`ุชู ุชุณุฌูู ุงูุทูุจ ูุฎุตู ${formatCurrency(window.mealOrder.total)} ูู ุญุณุงุจ ${employeeName}`, 'success');
    
    window.mealOrder = { items: [], total: 0 };
    loadEmployeeCashier();
}

function printMealOrder(orderId, order) {
    const printContent = `
        <div style="font-family: Arial; padding: 20px; direction: rtl;">
            <h2 style="text-align: center; border-bottom: 2px solid #000; padding-bottom: 10px;">
                ูุงุชูุฑุฉ ูุฌุจุฉ ููุธู
            </h2>
            <p><strong>ุฑูู ุงููุงุชูุฑุฉ:</strong> ${orderId}</p>
            <p><strong>ุงูููุธู:</strong> ${order.employee_name}</p>
            <p><strong>ุงูุชุงุฑูุฎ:</strong> ${formatDate(order.created_at)}</p>
            <p><strong>ุงูููุช:</strong> ${formatTime(order.created_at)}</p>
            
            <table style="width: 100%; border-collapse: collapse; margin: 20px 0;">
                <thead>
                    <tr style="border-bottom: 2px solid #000;">
                        <th style="text-align: right; padding: 8px;">ุงููุฌุจุฉ</th>
                        <th style="text-align: center; padding: 8px;">ุงููููุฉ</th>
                        <th style="text-align: center; padding: 8px;">ุงูุณุนุฑ</th>
                        <th style="text-align: center; padding: 8px;">ุงููุฌููุน</th>
                    </tr>
                </thead>
                <tbody>
                    ${order.items.map(item => `
                        <tr style="border-bottom: 1px solid #ccc;">
                            <td style="text-align: right; padding: 8px;">${item.name}</td>
                            <td style="text-align: center; padding: 8px;">${item.quantity}</td>
                            <td style="text-align: center; padding: 8px;">${formatCurrency(item.price)}</td>
                            <td style="text-align: center; padding: 8px;">${formatCurrency(item.total)}</td>
                        </tr>
                    `).join('')}
                </tbody>
            </table>
            
            <div style="border-top: 2px solid #000; padding-top: 10px; margin-top: 20px;">
                <h3 style="text-align: center;">ุงูุฅุฌูุงูู: ${formatCurrency(order.total)}</h3>
            </div>
            
            <p style="text-align: center; margin-top: 30px; font-size: 0.9em;">
                ุชู ุฎุตู ุงููุจูุบ ูู ุญุณุงุจ ุงูููุธู
            </p>
        </div>
    `;
    
    const printWindow = window.open('', '_blank');
    printWindow.document.write(printContent);
    printWindow.document.close();
    printWindow.print();
}

async function showMealOrdersHistory() {
    const orders = await db.getAll('employee_meal_orders');
    const content = document.getElementById('employeeCashierContent');
    
    content.innerHTML = `
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">ุณุฌู ุทูุจุงุช ุงููุฌุจุงุช</h3>
            </div>

            <div class="table-container">
                <table>
                    <thead>
                        <tr>
                            <th>ุฑูู</th>
                            <th>ุงูุชุงุฑูุฎ</th>
                            <th>ุงูููุธู</th>
                            <th>ุนุฏุฏ ุงููุฌุจุงุช</th>
                            <th>ุงูุฅุฌูุงูู</th>
                            <th>ุชูุงุตูู</th>
                            <th>ุทุจุงุนุฉ</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${orders.length === 0 ? '<tr><td colspan="7" class="text-center">ูุง ุชูุฌุฏ ุทูุจุงุช</td></tr>' :
                          orders.reverse().map(order => `
                            <tr>
                                <td>${order.id}</td>
                                <td>${formatDate(order.created_at)}</td>
                                <td>${order.employee_name}</td>
                                <td>${order.items.reduce((sum, i) => sum + i.quantity, 0)}</td>
                                <td>${formatCurrency(order.total)}</td>
                                <td>
                                    <button class="btn-icon" onclick="showMealOrderDetails(${order.id})" title="ุชูุงุตูู">๐๏ธ</button>
                                </td>
                                <td>
                                    <button class="btn-icon" onclick="reprintMealOrder(${order.id})" title="ุทุจุงุนุฉ">๐จ๏ธ</button>
                                </td>
                            </tr>
                        `).join('')}
                    </tbody>
                </table>
            </div>
        </div>
    `;
}

async function showMealOrderDetails(orderId) {
    const order = await db.getById('employee_meal_orders', orderId);
    
    const detailsHTML = `
        <div>
            <p><strong>ุงูููุธู:</strong> ${order.employee_name}</p>
            <p><strong>ุงูุชุงุฑูุฎ:</strong> ${formatDate(order.created_at)} - ${formatTime(order.created_at)}</p>
            <p><strong>ุงูุฅุฌูุงูู:</strong> ${formatCurrency(order.total)}</p>
            
            <h4>ุงููุฌุจุงุช:</h4>
            <table style="width: 100%;">
                <thead>
                    <tr>
                        <th>ุงููุฌุจุฉ</th>
                        <th>ุงููููุฉ</th>
                        <th>ุงูุณุนุฑ</th>
                        <th>ุงููุฌููุน</th>
                    </tr>
                </thead>
                <tbody>
                    ${order.items.map(item => `
                        <tr>
                            <td>${item.name}</td>
                            <td>${item.quantity}</td>
                            <td>${formatCurrency(item.price)}</td>
                            <td>${formatCurrency(item.total)}</td>
                        </tr>
                    `).join('')}
                </tbody>
            </table>
        </div>
    `;
    
    showModal(`ุชูุงุตูู ุงูุทูุจ #${orderId}`, detailsHTML);
}

async function reprintMealOrder(orderId) {
    const order = await db.getById('employee_meal_orders', orderId);
    printMealOrder(orderId, order);
    showToast('ุชู ุฅุนุงุฏุฉ ุทุจุงุนุฉ ุงููุงุชูุฑุฉ', 'success');
}
